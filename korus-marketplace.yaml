openapi: 3.1.0
info:
  version: 1.0.
  title: "korus-marketplace API"
  description: |
    # Что такое korus-marketplace API
    korus-marketplace API — программный интерфейс для работы с приложением и обмена информацией между системой продавца и маркетплейсами.

    Методы korus-marketplace API позволяют изменять данные магазина, например, остатки товаров или их стоимость, и получать данные, такие как информация о возвратах или список складов.
    
    Работа с API состоит из отправки запроса и получения ответа. Для этого можно использовать программу Postman.
    # Порядок работы с методами
    1. Авторизоваться с помощью логина и пароля
    2. Загрузить категории товарного каталога
    3. Загрузить товары
    4. Загрузить склады
    5. Загрузить остатки
    6. Загрузить цены
  x-logo:
    url: '/img/logo.png'

servers:
  - url: 'https://korus-marketplace.bubbleapps.io/version-test/api/1.1/wf/'
 
paths:
  /auth:
    post:
      security: []
      summary: "Получение токена"
      description: "Метод позволяет получить токен с помощью логина и пароля"
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                email:
                  description: "Логин"
                  type: string
                  example: test@test.ru
                password:
                  description: "Пароль"
                  type: string
                  example: qwerty123
      responses: 
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус" 
                    type: integer
                    example: "success"
                  response:
                    description: "Тело ответа"
                    type: object
                    properties:
                      token:
                        description: "Токен клиента"
                        type: string
                        example: "1640006703213x410134863429732220"
                      user_id:
                        description: "Идентификатор клиента"
                        type: string
                        example: "1639995517569x263123207087834520"
                      expires: 
                        description: "Значение содержит дату/время, по истечении которой ответ сервера считается устаревшим"
                        type: integer
                        example: 31536123
        400:
          description: Invalid login error
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    description: "Код ошибки"
                    type: integer
                    example: 400
                  reason:
                    description: "Причина ошибки"
                    type: string
                  massage:
                    description: "Описание ошибки" 
                    type: string
                    example: "Мы не нашли аккаунт с этими учетными данными"
  /product_list:
    post:
      summary: "Товары"
      description: "Метод возвражает все товары пользователя с характеристиками, если не указан `unique_id`. Если `unique_id` указан - возвращается только один товар"
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный id"
                  type: integer
                  example: ""
      responses: 
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  unique_id:
                    description: "Уникальный идентификатор"
                    type: string
                    example: "1639637640720x452765959533053300"
                  product_name:
                    description: "Наименование товара"
                    type: string
                    example: "Новый товар"
                  category_id:
                    description: "Идентификатор категории"
                    type: integer
                    example: 12341213
                  barcode:
                    description: "Штрихкод товара"
                    type: integer
                    example: 11112121
                  description:
                    description: "Описание товара"
                    type: string
                    example: "Этот замечательный товар создан через API, еще и изменен!"
                  Gabarit_unit:
                    description: "Еденица измерения габаритов"
                    type: string
                    example: "Сантиметры"                
                  depth:
                    description: "Глубина"
                    type: integer
                    example: 10
                  height:
                    description: "Высота"
                    type: integer
                    example: 15
                  length:
                    description: "Длина"
                    type: integer
                    example: 120
                  width:
                    description: "Ширина"
                    type: integer
                    example: 1100
                  weight:
                    description: "Вес"
                    type: integer
                    example: 100
                  weight_unit:
                    description: "Еденица измерения веса."
                    type: string
                    example: "Граммы"
                  old_price:
                    description: "Старая цена"
                    type: integer
                    example: 1500
                  price:
                    description: "Новая цена"
                    type: integer
                    example: 1200
                  vendor_code:
                    description: Артикул 
                    type: string
                    example: "2535375112"
                  Images_list:
                    description: "Фото товара"
                    type: array
                    items:
                      type: string
                      example: "'https://www.test.ru/1111111.jpg' , 'https://www.test2.ru/2222222.jpg'"
                  harakteristik:
                    description: "Массив с характеристиками товара."
                    type: object
                    properties:
                      client_har_title:
                        description: "Название характеристики"
                        type: string
                        example: "Цвет"
                      client_har_value:
                        description: "Значение характеристики"
                        type: string
                        example: "Синий"
        400:
          description: Unique id
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"

  /product_add:
    post:
      summary: "Создание товара"
      description: "Метод создает товар. Один запрос - один товар. Если `unique_id` не задан, то создасться новый товар. Если `unique_id` задан, но не найден - вернется ошибка."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный идентификатор"
                  type: string
                  example: "1639637640720x452765959533053300"
                product_name:
                  description: "Наименование товара"
                  type: string
                  example: "Новый товар"
                category_id:
                  description: "Идентификатор категории"
                  type: integer
                  example: 12341213
                barcode:
                  description: "Штрихкод товара"
                  type: integer
                  example: 11112121
                description:
                  description: "Описание товара"
                  type: string
                  example: "Этот замечательный товар создан через API, еще и изменен!"
                Gabarit_unit:
                  description: "Еденица измерения габаритов"
                  type: string
                  example: "Сантиметры"                
                depth:
                  description: "Глубина"
                  type: integer
                  example: 10
                height:
                  description: "Высота"
                  type: integer
                  example: 15
                length:
                  description: "Длина"
                  type: integer
                  example: 120
                width:
                  description: "Ширина"
                  type: integer
                  example: 1100
                weight:
                  description: "Вес"
                  type: integer
                  example: 100
                weight_unit:
                  description: "Еденица измерения веса."
                  type: string
                  example: "Граммы"
                old_price:
                  description: "Старая цена"
                  type: integer
                  example: 1500
                price:
                  description: "Новая цена"
                  type: integer
                  example: 1200
                vendor_code:
                  description: Артикул 
                  type: string
                  example: "2535375112"
                Images_list:
                  description: "Фото товара"
                  type: array
                  items:
                    type: string
                    example: "'https://www.test.ru/1111111.jpg' , 'https://www.test2.ru/2222222.jpg'"
                harakteristik:
                  description: "Массив с характеристиками товара"
                  type: object
                  properties:
                    client_har_title:
                      description: "Название характеристики"
                      type: string
                      example: "Цвет"
                    client_har_value:
                      description: "Значение характеристики"
                      type: string
                      example: "Синий"
      responses: 
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status: 
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ"
                    type: object
                    properties:
                      unique_id:
                        type: string
                        example: "1639637640720x452765959533053300"
  
  /product_edit:
    post:
      summary: "Обновление товара"
      description: "Метод обновляет товар. Один запрос - один товар. Если `unique_id` не задан, то создасться новый товар. Если `unique_id` задан, но не найден - вернется ошибка."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный идентификатор"
                  type: string
                  example: "1639637640720x452765959533053300"
                product_name:
                  description: "Наименование товара"
                  type: string
                  example: "Новый товар"
                category_id:
                  description: "Идентификатор категории"
                  type: integer
                  example: 12341213
                barcode:
                  description: "Штрихкод товара"
                  type: integer
                  example: 11112121
                description:
                  description: "Описание товара"
                  type: string
                  example: "Этот замечательный товар создан через API, еще и изменен!"
                Gabarit_unit:
                  description: "Еденица измерения габаритов"
                  type: string
                  example: "Сантиметры"                
                depth:
                  description: "Глубина"
                  type: integer
                  example: 10
                height:
                  description: "Высота"
                  type: integer
                  example: 15
                length:
                  description: "Длина"
                  type: integer
                  example: 120
                width:
                  description: "Ширина"
                  type: integer
                  example: 1100
                weight:
                  description: "Вес"
                  type: integer
                  example: 100
                weight_unit:
                  description: "Еденица измерения веса"
                  type: string
                  example: "Граммы"
                old_price:
                  description: "Старая цена"
                  type: integer
                  example: 1500
                price:
                  description: "Новая цена"
                  type: integer
                  example: 1200
                vendor_code:
                  description: Артикул 
                  type: string
                  example: "2535375112"
                Images_list:
                  description: "Фото товара"
                  type: array
                  items:
                    type: string
                    example: "'https://www.test.ru/1111111.jpg' , 'https://www.test2.ru/2222222.jpg'"
                harakteristik:
                  description: "Массив с характеристиками товара."
                  type: object
                  properties:
                    client_har_title:
                      description: "Название характеристики"
                      type: string
                      example: "Цвет"
                    client_har_value:
                      description: "Значение характеристики"
                      type: string
                      example: "Синий"
      responses: 
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status: 
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ"
                    type: object
                    properties:
                      unique_id:
                        type: string
                        example: "1639637640720x452765959533053300"
        400:
          description: Unique id
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"
                                     
  /warehouses_add-edit:
    post:
      summary: "Создание и обновление  склада"
      description: "Метод создает или обновляет склад. Один запрос - один склад. Если `unique_id` не задан, то создастся новый склад. Если `unique_id` задан, но не найден - вернется ошибка."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный идентификатор"
                  type: integer
                  example: ""
                warehouse_id:
                  description: "Идентификатор склада"
                  type: string
                  example: "123657"
                warehouse_name:
                  description: "Название склада"
                  type: string
                  example: "Склад №1"
                warehouse_status_Opt:
                  description: "Статус склада"
                  type: string
                  example: "ACTIVE"
      responses: 
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус" 
                    type: string
                    example: "success"
                  response:
                    description: "Ответ"
                    type: object
                    properties:
                      warehouse:
                        description: "Значения склада"
                        type: object
                        properties:
                          _id:
                            description: "Идентификатор"
                            type: string
                            example: "1640026064270x321152913177484400"
                          Created By:
                            description: "Создан"
                            type: string
                            example: "1635784787159x754900195449749900"
                          Created Date:
                            description: "Дата создания"
                            type: integer
                            example: 1640026064315
                          Modified Date:
                            description: "Дата изменения"
                            type: integer
                            example: 1640026064361
                          client_id:
                            description: "Идентификатор клиента"
                            type: string
                            example: "1635784787159x754900195449749900"
                          warehouse_id:
                            description: "Идентификатор склада"
                            type: integer
                            example: 123654
                          warehouse_name:
                            description: "Название склада"
                            type: string
                            example: "Склад №1"
                          warehouse_status_Opt:
                            description: "Статус склада"
                            type: string
                            example: "ACTIVE"
        400:
          description: Unique id
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"
                       
  /Warehouses-list:
    post:
      summary: "Склады"
      description: "Метод возвражает все склады пользователя с характеристиками, если не указан `unique_id`. Если `unique_id` указан - возвращается только один товар."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный идентификатор"
                  type: string
                  example: ""
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  unique_id: 
                    description: "Уникальный идентификатор"
                    type: string
                    example: "1639642239332x762328172806975100"
                  warehouse_id:
                    description: "Уникальный идентификатор склада"
                    type: string
                    example: "123654"
                  warehouse_name:
                    description: "Название склада"
                    type: string
                    example: "Новый склад"
                  warehouse_status_Opt:
                    description: "Статус склада"
                    type: string
                    example: "ACTIVE"
        400:
          description: Unique id
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"


  /warehouses-del:
    post:
      summary: "Удаление склада"
      description: "Метод удаляет склад по уникальному ID."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный идентификатор"
                  type: string
                  example: ""
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status: 
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ"
                    type: object
                    properties:
                      unique_id:
                        description: "Уникальный идентификатор"
                        type: string
                        example: "1639637640720x452765959533053300"
                      status:
                        description: "Статус выполнения запроса"
                        type: string
                        example: "Delete"              
        400:
          description: Unique id
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"
            
  /prices:
    post:
      summary: "Установить цену товара"
      description: "Метод задает новую цену товара."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                unique_id:
                  description: "Уникальный идентификатор"
                  type: string
                  example: "1639637640720x452765959533053300"
                old_price:
                  description: "Старая цена"
                  type: integer
                  example: 1500
                price: 
                  description: "Новая цена"
                  type: integer
                  example: 1200
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ"
                    type: object
                    properties:
                      response:
                        type: string
                        example: "Цена успешно отредактирована"
        400:
          description: Unique id
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"
  /stocks_add-edit:
    post:
      summary: "Создание или обновление остатков на складе"
      description: "Создает или обновляет остатки на складе. Один запрос - один остаток для одного товара. Если `unique_id` для склада и для товара не задан, то вернется ошибка."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                warehouse_unique_id:
                  description: "Уникальный идентификатор склада"
                  type: string
                  example: "1639642239332x762328172806975100"
                goods_unique_id:
                  description: "Уникальный идентификатор товара"
                  type: string
                  example: "1639637640720x452765959533053300"
                quantity:
                  description: "Количество товара" 
                  type: integer
                  example: 12
                reserved:
                  description: "Зарезервированно"
                  type: integer
                  example: 15
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус" 
                    type: string
                    example: "success"
                  response:
                    description: "Ответ"
                    type: object
                    properties:
                      response:
                        description: Ответ на запрос
                        type: string
                        example: "Остатки успешно обновлены"
        400:
          description: Unique id Склада
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Склад с таким unique id не найден"
        401:
          description: Unique id Товара
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: integer
                    example: 400
                  status_code:
                    description: "Код ошибки"
                    type: string
                  error_description:
                    description: "Описание ошибки" 
                    type: string
                    example: "Товар с таким unique id не найден"  
  /catalog_add-edit:
    post:
      summary: "Создание или изменение каталога"
      description: "Медод создает или изменяет каталог клиента. Один запрос - одно название каталога."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                CLIENT_category_id:
                  description: "Уникальный идентификатор категории"
                  type: integer
                  example: 12348789554
                CLIENT_category_name:
                  description: "Наименование категории"
                  type: string
                  example: "Супер прикольные женские куртки"
                parent_id: 
                  description: "Уникальный идентификатор родительской категории"
                  type: integer
                  example: 43244231234
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status: 
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ на запрос"
                    type: object
                    properties:
                      response:
                        type: string
                        example: "Каталог успешно обновлен"
  /catalog_list:
    post: 
      summary: "Каталоги пользователя"
      description: "Метод возвражает все категории каталога пользователя."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                -:
                  description: Пустое значение
                  type: none
                  example: 
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status: 
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ на запрос"
                    type: object
                    properties:
                      catalog:
                        description: "Характеристики категории"
                        type: object
                        properties:
                          CLIENT_category_id": 
                            description: "Уникальный идентификатор категории"
                            type: integer
                            example: 213123123
                          CLIENT_category_name:
                            description: "Наименование категории" 
                            type: string
                            example: "Швейные машинки"
                          client_id:
                            description: "Уникальный идентификатор клиента" 
                            type: string
                            example: "1635784787159x754900195449749900"
                          Created Date:
                            description: "Дата создания" 
                            type: integer
                            example: 1636976041523
                          Created By: 
                            description: "Создан"
                            type: string
                            example: "admin_user_korus-marketplace_test"
                          Modified Date:
                            description: "Дата изменения" 
                            type: integer
                            example: 1638883074527
                          _id: 
                            description: "Уникальный идентификатор"
                            type: string
                            example: "1636976041463x819130399848875500"
  /catalog_del:
    post:
      summary: "Удаление каталога"
      description: "Метод удаляет каталог."
      requestBody:
        content: 
          application/json:
            schema: 
              properties:
                CLIENT_category_id:
                  description: "Уникальный идентификатор категории"
                  type: integer
                  example: 31231231
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status: 
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ на запрос"
                    type: object
                    properties:
                      response:
                        description: "Ответ на запрос"
                        type: string
                        example: "Каталог успешно удален"
        400:
          description: Category error
          content:
            application/json:
              schema:
                properties:
                  status:
                    description: "Статус"
                    type: string
                    example: "success"
                  response:
                    description: "Ответ на запрос" 
                    type: string
                    example: "Каталог не найден"       
components:
  securitySchemes:
    bearerAuth:
      description: "После получения токена необходимо создать дополнительный Header: `Authorization`: `Bearer YOUR_TOKEN` для всех остальных запросов"        
      type: http
      scheme: bearer
      bearerFormat: 16387321322x978663421424    
security:
  - bearerAuth: []